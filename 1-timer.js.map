{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\nimport iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\n\nlet userSelectedDate = null;\nconst startButton = document.querySelector('[data-start]');\nstartButton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n      const selectedDate = selectedDates[0];\n      if (selectedDate <= new Date()) {\n          iziToast.error({\n              title: 'Error',\n              message: 'Please choose a date in the future',\n          });\n          startButton.disabled = true;\n      } else {\n          userSelectedDate = selectedDate;\n          startButton.disabled = false;\n      }\n  },\n};\n\nflatpickr(\"#datetime-picker\", options);\n\nstartButton.addEventListener('click', () => {\n    startButton.disabled = true;\n    const timerId = setInterval(() => {\n        const currentTime = new Date();\n        const deltaTime = userSelectedDate - currentTime;\n\n        if (deltaTime <= 0) {\n            clearInterval(timerId);\n            updateTimerDisplay(0, 0, 0, 0);\n            return;\n        }\n        const { days, hours, minutes, seconds } = convertMs(deltaTime);\n        updateTimerDisplay(days, hours, minutes, seconds);\n    }, 1000);\n});\n\nfunction convertMs(ms) {\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    const days = Math.floor(ms / day);\n    const hours = Math.floor((ms % day) / hour);\n    const minutes = Math.floor(((ms % day) % hour) / minute);\n    const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n    return { days, hours, minutes, seconds };\n}\n\nfunction updateTimerDisplay(days, hours, minutes, seconds) {\n    document.querySelector('[data-days]').textContent = addLeadingZero(days);\n    document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n    document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n    document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);   \n}\n\nfunction addLeadingZero(value) {\n    return String(value).padStart(2, '0');\n}\n\n\n\n\n"],"names":["userSelectedDate","startButton","options","selectedDates","selectedDate","iziToast","flatpickr","timerId","deltaTime","updateTimerDisplay","days","hours","minutes","seconds","convertMs","ms","addLeadingZero","value"],"mappings":"0IAKA,IAAIA,EAAmB,KACvB,MAAMC,EAAc,SAAS,cAAc,cAAc,EACzDA,EAAY,SAAW,GAEvB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnB,MAAMC,EAAeD,EAAc,CAAC,EAChCC,GAAgB,IAAI,MACpBC,EAAS,MAAM,CACX,MAAO,QACP,QAAS,oCACvB,CAAW,EACDJ,EAAY,SAAW,KAEvBD,EAAmBI,EACnBH,EAAY,SAAW,GAE9B,CACH,EAEAK,EAAU,mBAAoBJ,CAAO,EAErCD,EAAY,iBAAiB,QAAS,IAAM,CACxCA,EAAY,SAAW,GACvB,MAAMM,EAAU,YAAY,IAAM,CAE9B,MAAMC,EAAYR,EADE,IAAI,KAGxB,GAAIQ,GAAa,EAAG,CAChB,cAAcD,CAAO,EACrBE,EAAmB,EAAG,EAAG,EAAG,CAAC,EAC7B,MACH,CACD,KAAM,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,GAAYC,EAAUN,CAAS,EAC7DC,EAAmBC,EAAMC,EAAOC,EAASC,CAAO,CACnD,EAAE,GAAI,CACX,CAAC,EAED,SAASC,EAAUC,EAAI,CAMnB,MAAML,EAAO,KAAK,MAAMK,EAAK,KAAG,EAC1BJ,EAAQ,KAAK,MAAOI,EAAK,MAAO,IAAI,EACpCH,EAAU,KAAK,MAAQG,EAAK,MAAO,KAAQ,GAAM,EACjDF,EAAU,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAL,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAEA,SAASJ,EAAmBC,EAAMC,EAAOC,EAASC,EAAS,CACvD,SAAS,cAAc,aAAa,EAAE,YAAcG,EAAeN,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcM,EAAeL,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcK,EAAeJ,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcI,EAAeH,CAAO,CACjF,CAEA,SAASG,EAAeC,EAAO,CAC3B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACxC"}